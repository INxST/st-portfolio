html {
  /* desktop */
  @media (min-width: 1024px) {
    /* 16px(1rem) / 1920px(アートボードサイズ) * 100 */
    font-size: calc((16 / 1920) * 100vw);
  }

  /* note */
  @media (max-width: 1023px) and (min-width: 768px) {
    /* 16px(1rem) / 1024px(アートボードサイズ) * 100 */
    font-size: calc((16 / 1024) * 100vw);
  }

  /* tablet, smartphone */
  @media (max-width: 767px) {
    /* 14px(1rem) / 375px(アートボードサイズ) * 100 */
    font-size: calc((14 / 375) * 100vw);
  }
}

html,
body {
  -webkit-text-size-adjust: 100%;
}

html.lenis,
html.lenis body {
  height: auto;
}

.lenis.lenis-smooth {
  scroll-behavior: auto !important;
}

.lenis.lenis-smooth [data-lenis-prevent] {
  overscroll-behavior: contain;
}

.lenis.lenis-stopped {
  overflow: hidden;
}

.lenis.lenis-smooth iframe {
  pointer-events: none;
}

.cursor {
  &.is-active {
    opacity: 0;
    visibility: hidden;
  }
}

.follower {
  &.is-active {
    mix-blend-mode: normal;
    width: 5rem;
    height: 5rem;

    .follower__text {
      opacity: 1;
      visibility: visible;
    }
  }

  &.is-bg-bright {
    background-color: #dededa;

    .follower__text {
      color: #3d3d3d;
    }
  }
}

.ts-text-link {
  $this: &;
  position: relative;

  * {
    transition-duration: 0.8s;
    transition-property: opacity, visibility, transform, top, left;
    transition-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
  }

  &__original {
    opacity: 0;
    padding: 0 0.1em;
  }

  &__clone {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
  }

  &:not([data-vertical='rl']) {
    display: inline-flex;
    overflow-y: hidden;

    #{$this}__clone {
      + #{$this}__clone {
        span {
          transform: translateY(120%);
        }
      }
    }

    &:hover {
      #{$this}__clone {
        span {
          transform: translateY(-120%);
        }

        + #{$this}__clone {
          span {
            transform: translateY(0);
          }
        }
      }
    }
  }

  &[data-vertical='rl'] {
    overflow-x: hidden;

    #{$this}__clone {
      + #{$this}__clone {
        span {
          transform: translateX(120%);
        }
      }
    }

    &:hover {
      #{$this}__clone {
        span {
          transform: translateX(-120%);
        }

        + #{$this}__clone {
          span {
            transform: translateX(0);
          }
        }
      }
    }
  }
}
