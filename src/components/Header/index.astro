---
import headerLinks from '@/data/headerLinks';
import Logo from './Logo.astro';
import Disc from '@/components/Disc.astro';
import Menu from '@/components/Header/Menu.astro';
import type { ThemeColor } from '@/types/ThemeColor';
import updatePath from '@/libs/updatePath';
import { buttonOpenClass } from './buttonClass';
interface Props {
  color?: ThemeColor;
  mixBlendMode?: boolean;
}
const { color, mixBlendMode = false } = Astro.props;
const path = Astro.url.pathname;
---

<header
  id="header"
  class="group-[header] fixed left-0 top-0 z-30 w-screen transition-all data-[color=dark]:text-pampas"
  data-color={color}
  data-mix-blend-mode={mixBlendMode ? 'true' : 'false'}
>
  <div class="container flex items-start px-5 py-5 md:px-20 md:py-10">
    <a
      href={updatePath('/')}
      class="ts-logo transition-all hover:opacity-30 [&_svg]:fill-silver-chalice"
      aria-label="TAIKI SATO"
    >
      <Logo />
    </a>
    <ul
      class="ts-header-list ml-auto hidden max-h-[var(--header-list-height)] gap-8 transition-colors ease-in-out group-[header]:data-[color=dark]:text-pampas md:flex"
    >
      {
        headerLinks.map(link => (
          <li class="relative">
            {path !== '/' && link.href.includes(path) && (
              <span class="absolute -top-4 left-1/2 h-[6px] w-[6px] -translate-x-1/2">
                <Disc />
              </span>
            )}
            <a
              href={updatePath(link.href)}
              class={`ts-text-link text-2xl vertical-rl md:text-lg ${path !== '/' && link.href.includes(path) && 'text-gray'}`}
              data-vertical="rl"
            >
              {link.text}
            </a>
          </li>
        ))
      }
    </ul>

    <button class={buttonOpenClass} data-color={color}>
      <span class="inline-block">MENU</span>
      <Disc />
    </button>
  </div>
</header>

<Menu />

<script>
  import animation from './animation';
  import menuToggle from './menuToggle';
  animation();
  menuToggle();
</script>

<style lang="scss">
  .ts-header-list {
    transition: all 0.5s ease-in-out;
  }

  .is-scroll {
    .ts-header-list {
      transform: translateY(-1rem);
      visibility: hidden;
      opacity: 0;
      max-height: 0;
    }
  }
</style>
